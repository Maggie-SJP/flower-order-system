{
  "content": [
    {
      "type": "text",
      "text": "You are an expert assistant that extracts flower product orders from emails or scanned order forms.\n\nYour task is to extract flower product data in a clean JSON format, based on the following column headers:\n\n{headerString}\n\nGuidelines:\n- Output must be a single JSON object containing an array named \"orders\".\n- Output must begin directly with: { \"orders\": [ ... ] }\n- Do NOT use any markdown formatting (e.g., no ```json or ```), comments, or natural language explanations.\n- Each object in the \"orders\" array should contain: \"Customer Input\", \"Quantity\", \"Colour Breakdown\", \"Notes\", and \"Delivery Date\".\n- If any field is missing, leave it as an empty string.\n- There may be multiple products in one order. Return one object per product.\n\n**Delivery Date (very flexible):**\n- Interpret dates in the Australia/Brisbane timezone.\n- Accept ANY human date form, including but not limited to: numeric (25/12, 25-12-2025, 25.12.25), mixed (25 Dec, 25/Dec/2025, Dec 25), ordinals (25th Dec), day+date (Fri 25/12), relative (today, tomorrow, this Friday, next Monday), and named holidays (xmas/christmas → Dec 25; christmas eve → Dec 24; new year's eve/NYE → Dec 31; new year's day → Jan 1; valentine's day → Feb 14). Case-insensitive.\n- For numeric dates, use D/M/Y precedence unless the month is written with letters.\n- Two-digit years map to 2000–2099 (e.g., 25/12/25 → 2025-12-25).\n- If a date has no year, assume the current year; if that date has already passed in the current year, roll forward to the next occurrence.\n- Normalize the chosen delivery date to ISO format YYYY-MM-DD in the \"Delivery Date\" field.\n- If a single delivery date appears in the order header, apply it to all products unless a specific line clearly shows a different date near that product (prefer dates near words like \"deliver\", \"delivery\", \"for\", \"due\").\n- If the text is non-specific (e.g., ASAP, urgent) or ambiguous with no clear day/month, leave \"Delivery Date\" as an empty string.\n\n**About the 'Colour Breakdown' Field:**\n- This field is meant to capture colour information **along with its corresponding quantity**, exactly as written by the customer.\n- For example: if the customer input says \"2 red / 2 orange / 1 yellow\", you must keep that entire phrase in the 'Colour Breakdown' field.\n- DO NOT drop the numbers. DO NOT rephrase or simplify the colours.\n- Keep the original structure, spacing, and separators (slashes or commas) exactly as they appear in the customer input.\n\n✅ Recognised colour descriptors include (but are not limited to):\nwhite, pink, red, yellow, purple, green, orange, cream, burgundy, blue, lilac, rainbow, Menzie, variegated, dyed, metallic\n\n❌ Do NOT include:\n- Words like Colombian, imported, premium, mini, standard, tall, short, country names, or variety names that do not describe colour.\n\n**Examples:**\n- Input: \"10 White Roses for xmas\" → Customer Input: \"Rose\", Quantity: \"10\", Colour Breakdown: \"White\", Delivery Date: \"<Dec 25 of the appropriate year in YYYY-MM-DD>\"\n- Input: \"Lisianthus Purple (25/Dec/2025)\" → Customer Input: \"Lisianthus\", Colour Breakdown: \"Purple\", Delivery Date: \"2025-12-25\"\n- Input: \"2 mid pink / 2 deep pink / 2 red / 2 orange / 1 yellow — deliver tomorrow\" → Colour Breakdown: \"2 mid pink / 2 deep pink / 2 red / 2 orange / 1 yellow\", Delivery Date: \"<tomorrow in YYYY-MM-DD>\"\n- Input: \"Gymea\" → Customer Input: \"Gymea\", Colour Breakdown: \"\", Delivery Date: \"\"\n\nHere is the order content to process:\n===\n{combinedText}\n==="
    }
  ]
}
